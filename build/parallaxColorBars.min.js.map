{"version":3,"sources":["parallaxColorBars.es6"],"names":["factory","define","amd","exports","module","require","jQuery","$","fn","parallaxColorBars","method","methods","init","options","settings","extend","duration","shift","top","left","width","height","scrollTop","windowHeight","triggerPosition","window","on","this","each","$this_parallax_section","$color_bars","find","parallax_section_width","outerWidth","parallax_section_height","outerHeight","$this_bar","color_bar_height","animationTriggerStart","animationTriggerEnd","offset","animationLength","bar_position_top","bar_position_left","bar_width","bar_height","animateDuration","animateShift","$color_bar_background","color_bar_options","data","undefined","hasOwnProperty","css","position","overflow","bind","resize","resizeTO","clearTimeout","setTimeout","trigger","addClass","centerPixelShift","centerPercentShift","y","TweenLite","to","removeClass","apply","Array","prototype","slice","call","arguments","_typeof","error"],"mappings":"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","file":"parallaxColorBars.min.js","sourcesContent":["/*\n\nParallax Color Bars\n\nAuthor: lemehovskiy\nWebsite: https://github.com/lemehovskiy\n\n */\n\n;(function (factory) {\n    'use strict';\n\n    if (typeof define === 'function' && define.amd) {\n        define(['jquery'], factory);\n    } else if (typeof exports !== 'undefined') {\n        module.exports = factory(require('jquery'));\n    } else {\n        factory(jQuery);\n    }\n})\n(function ($) {\n\n    $.fn.parallaxColorBars = function (method) {\n\n        let methods = {\n\n            init: function (options) {\n\n                let settings = $.extend({\n                    duration: 1.5,\n                    shift: 10,\n                    top: 50,\n                    left: 50,\n                    width: 10,\n                    height: 20\n                }, options);\n\n\n                let scrollTop = 0,\n                    windowHeight = 0,\n                    triggerPosition = 0;\n\n\n                $(window).on('scroll load', function () {\n                    scrollTop = $(window).scrollTop();\n                    windowHeight = $(window).height();\n\n                    triggerPosition = scrollTop + windowHeight;\n                });\n\n\n                this.each(function () {\n\n                    let $this_parallax_section = $(this),\n                        $color_bars = $this_parallax_section.find('.color-bar'),\n                        parallax_section_width = $this_parallax_section.outerWidth(),\n                        parallax_section_height = $this_parallax_section.outerHeight();\n\n\n                    $(window).on('resize', function () {\n                        parallax_section_width = $this_parallax_section.outerWidth();\n                        parallax_section_height = $this_parallax_section.outerHeight();\n                    });\n\n                    $color_bars.each(function(){\n\n                        let $this_bar = $(this),\n\n                            color_bar_height = $this_bar.outerHeight(),\n                            animationTriggerStart = 0,\n                            animationTriggerEnd = 0,\n                            offset = 0,\n                            animationLength = 0,\n\n                            bar_position_top = settings.top,\n                            bar_position_left = settings.left,\n                            bar_width = settings.width,\n                            bar_height = settings.height,\n\n                            animateDuration = settings.duration,\n                            animateShift = settings.shift,\n\n                            $color_bar_background = $this_bar.find('.color-bar-background'),\n\n                            color_bar_options = $this_bar.data('parallax-color-bar');\n\n\n\n                        if (color_bar_options != undefined) {\n                            if (color_bar_options.hasOwnProperty('duration')) {\n                                animateDuration = color_bar_options.duration;\n                            }\n\n                            if (color_bar_options.hasOwnProperty('shift')) {\n                                animateShift = color_bar_options.shift;\n                            }\n\n                            if (color_bar_options.hasOwnProperty('top')) {\n                                bar_position_top = color_bar_options.top;\n                            }\n\n                            if (color_bar_options.hasOwnProperty('left')) {\n                                bar_position_left = color_bar_options.left;\n                            }\n\n                            if (color_bar_options.hasOwnProperty('width')) {\n                                bar_width = color_bar_options.width;\n                            }\n\n                            if (color_bar_options.hasOwnProperty('height')) {\n                                bar_height = color_bar_options.height;\n                            }\n                        }\n\n                        $this_bar.css({\n                            top: bar_position_top + '%',\n                            left: bar_position_left + '%',\n                            position: 'absolute',\n                            overflow: 'hidden',\n                            width: bar_width + '%',\n                            height: bar_height + '%'\n\n                        });\n\n\n\n                        $color_bar_background.css({\n                            position: 'absolute'\n                        });\n\n\n\n                        $(window).bind('resizeEnd load', function () {\n                            $color_bar_background.css({\n                                width: parallax_section_width + 'px',\n                                height: parallax_section_height + 'px',\n                                left: - (parallax_section_width / 100 * color_bar_options.left) + 'px',\n                                top: - (parallax_section_height / 100 * color_bar_options.top) + 'px'\n                            });\n\n                            offset = $this_bar.offset();\n\n                            animationTriggerStart = offset.top;\n\n                            animationTriggerEnd = animationTriggerStart + windowHeight;\n\n                            animationLength = animationTriggerEnd - animationTriggerStart;\n                        });\n\n\n                        $(window).resize(function () {\n                            if (this.resizeTO) clearTimeout(this.resizeTO);\n                            this.resizeTO = setTimeout(function () {\n                                $(this).trigger('resizeEnd');\n                            }, 500);\n                        });\n\n\n                        $(window).on('scroll resize load', function () {\n\n                            if (triggerPosition > animationTriggerStart && triggerPosition < animationTriggerEnd + color_bar_height) {\n\n                                $this_bar.addClass('active');\n\n                                let centerPixelShift = triggerPosition - offset.top - (animationLength * 0.5);\n\n                                let centerPercentShift = centerPixelShift / (animationLength / 100) * 2;\n\n                                let y = animateShift / 100 * centerPercentShift;\n\n                                TweenLite.to($this_bar, animateDuration, {y: y + 'px'});\n                                TweenLite.to($color_bar_background, animateDuration, {y: - y + 'px'});\n\n                            }\n\n                            else {\n                                $this_bar.removeClass('active');\n                            }\n\n                        })\n                    })\n\n                });\n\n            }\n        };\n\n\n        if (methods[method]) {\n            return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));\n        } else if (typeof method === 'object' || !method) {\n            return methods.init.apply(this, arguments);\n        } else {\n            $.error('There is no method with the name ' + method + ', for jQuery.parallaxColorBars');\n        }\n    };\n\n});"]}