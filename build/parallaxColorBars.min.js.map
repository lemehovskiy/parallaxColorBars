{"version":3,"sources":["parallaxColorBars.es6"],"names":["$","fn","parallaxColorBars","method","methods","init","options","settings","extend","duration","shift","scrollTop","windowHeight","triggerPosition","window","on","height","this","each","$this_parallax_section","$color_bars","find","parallax_section_width","outerWidth","parallax_section_height","outerHeight","$this_bar","color_bar_height","animationTriggerStart","animationTriggerEnd","offset","animationLength","animateDuration","animateShift","$color_bar_background","color_bar_options","data","css","left","top","position","overflow","width","undefined","hasOwnProperty","addClass","centerPixelShift","centerPercentShift","y","TweenLite","to","removeClass","apply","Array","prototype","slice","call","arguments","_typeof","error","jQuery"],"mappings":"oOASA,SAAWA,GAEPA,EAAEC,GAAGC,kBAAoB,SAAUC,GAE/B,GAAIC,IAEAC,KAAM,SAAUC,GAEZ,GAAIC,GAAWP,EAAEQ,QACbC,SAAU,IACVC,MAAO,IACRJ,GAGCK,EAAY,EACZC,EAAe,EACfC,EAAkB,CAGtBb,GAAEc,QAAQC,GAAG,cAAe,WACxBJ,EAAYX,EAAEc,QAAQH,YACtBC,EAAeZ,EAAEc,QAAQE,SAEzBH,EAAkBF,EAAYC,IAIlCK,KAAKC,KAAK,WAEN,GAAIC,GAAyBnB,EAAEiB,MAC3BG,EAAcD,EAAuBE,KAAK,uBAC1CC,EAAyBH,EAAuBI,aAChDC,EAA0BL,EAAuBM,aAGrDzB,GAAEc,QAAQC,GAAG,SAAU,WACnBO,EAAyBH,EAAuBI,aAChDC,EAA0BL,EAAuBM,gBAGrDL,EAAYF,KAAK,WAEb,GAAIQ,GAAY1B,EAAEiB,MAEdU,EAAmBD,EAAUD,cAC7BG,EAAwB,EACxBC,EAAsB,EACtBC,EAAS,EACTC,EAAkB,EAElBC,EAAkBzB,EAASE,SAC3BwB,EAAe1B,EAASG,MAExBwB,EAAwBR,EAAUL,KAAK,kCAEvCc,EAAoBT,EAAUU,KAAK,qBAEvCV,GAAUW,KACNC,KAAMH,EAAkBG,KAAO,IAC/BC,IAAKJ,EAAkBI,IAAM,IAC7BC,SAAU,WACVC,SAAU,SACVC,MAAOP,EAAkBO,MAAQ,IACjC1B,OAAQmB,EAAkBnB,OAAS,MAMvCkB,EAAsBG,KAClBG,SAAU,iBAIWG,IAArBR,IACIA,EAAkBS,eAAe,cACjCZ,EAAkBG,EAAkB1B,UAGpC0B,EAAkBS,eAAe,WACjCX,EAAeE,EAAkBzB,QAKzCV,EAAEc,QAAQC,GAAG,cAAe,WAExBmB,EAAsBG,KAClBK,MAAOpB,EAAyB,KAChCN,OAAQQ,EAA0B,KAClCc,MAAShB,EAAyB,IAAMa,EAAkBG,KAAQ,KAClEC,KAAQf,EAA0B,IAAMW,EAAkBI,IAAO,OAGrET,EAASJ,EAAUI,SAEnBF,EAAwBE,EAAOS,IAE/BV,EAAsBD,EAAwBhB,EAE9CmB,EAAkBF,EAAsBD,IAI5C5B,EAAEc,QAAQC,GAAG,qBAAsB,WAE/B,GAAIF,EAAkBe,GAAyBf,EAAkBgB,EAAsBF,EAAkB,CAErGD,EAAUmB,SAAS,SAEnB,IAAIC,GAAmBjC,EAAkBiB,EAAOS,IAAyB,GAAlBR,EAEnDgB,EAAqBD,GAAoBf,EAAkB,KAAO,EAElEiB,EAAIf,EAAe,IAAMc,CAE7BE,WAAUC,GAAGxB,EAAWM,GAAkBgB,EAAGA,EAAI,OACjDC,UAAUC,GAAGhB,EAAuBF,GAAkBgB,GAAKA,EAAI,WAK/DtB,GAAUyB,YAAY,iBAY9C,OAAI/C,GAAQD,GACDC,EAAQD,GAAQiD,MAAMnC,KAAMoC,MAAMC,UAAUC,MAAMC,KAAKC,UAAW,IAChD,gBAAlB,KAAOtD,EAAP,YAAAuD,QAAOvD,KAAwBA,MAGtCH,GAAE2D,MAAM,oCAAsCxD,EAAS,gCAFhDC,EAAQC,KAAK+C,MAAMnC,KAAMwC,aAOzCG","file":"parallaxColorBars.min.js","sourcesContent":["/*\n\nParallax Color Bars\n\nAuthor: lemehovskiy\nWebsite: https://github.com/lemehovskiy\n\n */\n\n(function ($) {\n\n    $.fn.parallaxColorBars = function (method) {\n\n        let methods = {\n\n            init: function (options) {\n\n                let settings = $.extend({\n                    duration: 1.5,\n                    shift: 10\n                }, options);\n\n\n                let scrollTop = 0,\n                    windowHeight = 0,\n                    triggerPosition = 0;\n\n\n                $(window).on('scroll load', function () {\n                    scrollTop = $(window).scrollTop();\n                    windowHeight = $(window).height();\n\n                    triggerPosition = scrollTop + windowHeight;\n                });\n\n\n                this.each(function () {\n\n                    let $this_parallax_section = $(this),\n                        $color_bars = $this_parallax_section.find('.parallax-color-bar'),\n                        parallax_section_width = $this_parallax_section.outerWidth(),\n                        parallax_section_height = $this_parallax_section.outerHeight();\n\n\n                    $(window).on('resize', function () {\n                        parallax_section_width = $this_parallax_section.outerWidth();\n                        parallax_section_height = $this_parallax_section.outerHeight();\n                    });\n\n                    $color_bars.each(function(){\n\n                        let $this_bar = $(this),\n\n                            color_bar_height = $this_bar.outerHeight(),\n                            animationTriggerStart = 0,\n                            animationTriggerEnd = 0,\n                            offset = 0,\n                            animationLength = 0,\n\n                            animateDuration = settings.duration,\n                            animateShift = settings.shift,\n\n                            $color_bar_background = $this_bar.find('.parallax-color-bar-background'),\n\n                            color_bar_options = $this_bar.data('parallax-color-bar');\n\n                        $this_bar.css({\n                            left: color_bar_options.left + '%',\n                            top: color_bar_options.top + '%',\n                            position: 'absolute',\n                            overflow: 'hidden',\n                            width: color_bar_options.width + '%',\n                            height: color_bar_options.height + '%'\n\n                        });\n\n\n\n                        $color_bar_background.css({\n                            position: 'absolute'\n                        });\n\n\n                        if (color_bar_options != undefined) {\n                            if (color_bar_options.hasOwnProperty('duration')) {\n                                animateDuration = color_bar_options.duration;\n                            }\n\n                            if (color_bar_options.hasOwnProperty('shift')) {\n                                animateShift = color_bar_options.shift;\n                            }\n                        }\n\n\n                        $(window).on('resize load', function () {\n\n                            $color_bar_background.css({\n                                width: parallax_section_width + 'px',\n                                height: parallax_section_height + 'px',\n                                left: - (parallax_section_width / 100 * color_bar_options.left) + 'px',\n                                top: - (parallax_section_height / 100 * color_bar_options.top) + 'px'\n                            });\n\n                            offset = $this_bar.offset();\n\n                            animationTriggerStart = offset.top;\n\n                            animationTriggerEnd = animationTriggerStart + windowHeight;\n\n                            animationLength = animationTriggerEnd - animationTriggerStart;\n                        });\n\n\n                        $(window).on('scroll resize load', function () {\n\n                            if (triggerPosition > animationTriggerStart && triggerPosition < animationTriggerEnd + color_bar_height) {\n\n                                $this_bar.addClass('active');\n\n                                let centerPixelShift = triggerPosition - offset.top - (animationLength * 0.5);\n\n                                let centerPercentShift = centerPixelShift / (animationLength / 100) * 2;\n\n                                let y = animateShift / 100 * centerPercentShift;\n\n                                TweenLite.to($this_bar, animateDuration, {y: y + 'px'});\n                                TweenLite.to($color_bar_background, animateDuration, {y: - y + 'px'});\n\n                            }\n\n                            else {\n                                $this_bar.removeClass('active');\n                            }\n\n                        })\n                    })\n\n                });\n\n            }\n        };\n\n\n        if (methods[method]) {\n            return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));\n        } else if (typeof method === 'object' || !method) {\n            return methods.init.apply(this, arguments);\n        } else {\n            $.error('There is no method with the name ' + method + ', for jQuery.parallaxContent');\n        }\n    };\n\n\n})(jQuery);"]}